name: Shazia – Daily Job Scrape & Email

on:
  schedule:
    - cron: "0 22 * * *"  # ~5 PM EST (22:00 UTC). During EDT this fires ~6 PM local.
  workflow_dispatch:
    inputs:
      mode:
        description: "Run mode (manual only)"
        required: true
        default: "dry"
        type: choice
        options: [dry, send]

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 180
    env:
      PYTHONUNBUFFERED: "1"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || pip install "python-jobspy==1.1.82" pandas "pydantic<3" requests beautifulsoup4 markdownify tls-client tzdata python-dotenv

      # DRY-RUN (manual only): scrape, NO email
      - name: Dry-run (scrape only)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.mode == 'dry' }}
        env:
          JOBSPY_USER_AGENT: ${{ secrets.JOBSPY_USER_AGENT }}
          JOBSPY_PROXIES: ${{ secrets.JOBSPY_PROXIES }}
        run: |
          echo "==> Manual DRY run for Shazia"
          python automation_runner.py --profile shazia --hours 24 --dry-run --debug
          echo "Dry-run complete. CSVs are saved and will be uploaded as artifacts."

      # SEND (scheduled or manual-send): scrape + email
      - name: Check email secrets
        if: ${{ github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && inputs.mode == 'send') }}
        env:
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT:   ${{ secrets.SMTP_PORT }}
          SMTP_USER:   ${{ secrets.SMTP_USER }}
          SMTP_PASS:   ${{ secrets.SMTP_PASS }}
          SMTP_FROM:   ${{ secrets.SMTP_FROM }}
        run: |
          set -e
          for v in SMTP_SERVER SMTP_PORT SMTP_USER SMTP_PASS SMTP_FROM; do
            [ -n "${!v}" ] || { echo "::error::$v is missing"; exit 1; }
          done
          echo "✅ all email secrets present"

      - name: Send run (scrape + email)
        if: ${{ github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && inputs.mode == 'send') }}
        env:
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT:   ${{ secrets.SMTP_PORT }}
          SMTP_USER:   ${{ secrets.SMTP_USER }}
          SMTP_PASS:   ${{ secrets.SMTP_PASS }}
          SMTP_FROM:   ${{ secrets.SMTP_FROM }}
          JOBSPY_USER_AGENT: ${{ secrets.JOBSPY_USER_AGENT }}
          JOBSPY_PROXIES: ${{ secrets.JOBSPY_PROXIES }}
        run: |
          echo "==> Send run for Shazia"
          python automation_runner.py --profile shazia --hours 24 --send
          echo "✅ Email step done"

      - name: Upload CSV artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: shazia-results-${{ github.run_id }}
          path: |
            automation_out/*.csv
            debug_runs/**/*.csv
          if-no-files-found: ignore
