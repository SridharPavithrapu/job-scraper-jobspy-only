name: Daily Job Scrape & Email (5 PM PT)

on:
  schedule:
    # These two entries fire daily at 00:00 UTC and 01:00 UTC.
    # Keeping both means you get one run in PDT season and one in PST season.
    - cron: "0 0 * * *"
  workflow_dispatch: {}  # manual run for debugging

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      PYTHONUNBUFFERED: "1"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install "python-jobspy==1.1.82" pandas "pydantic<3" requests beautifulsoup4 markdownify tls-client tzdata python-dotenv
          fi
          python - <<'PY'
          import sys, importlib
          print("site-packages sample:", sys.path[:3])
          importlib.import_module("jobspy")
          print("✅ python-jobspy import OK")
          PY

      - name: Log current PT time (for visibility only)
        run: |
          python - <<'PY'
          from datetime import datetime
          from zoneinfo import ZoneInfo
          print("Local PT time:", datetime.now(ZoneInfo("America/Los_Angeles")).isoformat())
          PY

      # Manual dry-runs for debugging – does NOT send emails
      - name: Dry-run all profiles (manual only)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        env:
          JOBSPY_USER_AGENT: ${{ secrets.JOBSPY_USER_AGENT }}
          JOBSPY_PROXIES: ${{ secrets.JOBSPY_PROXIES }}
        run: |
          set -e
          python automation_runner.py --profile yoshitha --dry-run --debug --hours 24
          python automation_runner.py --profile shazia   --dry-run --debug --hours 24

      # Real sends for scheduled runs (no guard)
      - name: Check required email secrets (scheduled runs)
        if: ${{ github.event_name != 'workflow_dispatch' }}
        env:
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT:   ${{ secrets.SMTP_PORT }}
          SMTP_USER:   ${{ secrets.SMTP_USER }}
          SMTP_PASS:   ${{ secrets.SMTP_PASS }}
          SMTP_FROM:   ${{ secrets.SMTP_FROM }}
        run: |
          set -e
          for v in SMTP_SERVER SMTP_PORT SMTP_USER SMTP_PASS SMTP_FROM; do
            [ -n "${!v}" ] || { echo "::error::$v is missing"; exit 1; }
          done
          echo "✅ all email secrets present"

      - name: Run automation (emails on schedule)
        if: ${{ github.event_name != 'workflow_dispatch' }}
        env:
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT:   ${{ secrets.SMTP_PORT }}
          SMTP_USER:   ${{ secrets.SMTP_USER }}
          SMTP_PASS:   ${{ secrets.SMTP_PASS }}
          SMTP_FROM:   ${{ secrets.SMTP_FROM }}
          JOBSPY_USER_AGENT: ${{ secrets.JOBSPY_USER_AGENT }}
          JOBSPY_PROXIES: ${{ secrets.JOBSPY_PROXIES }}
        run: |
          set -e
          python automation_runner.py --profile yoshitha --hours 24
          python automation_runner.py --profile shazia   --hours 24

      - name: Summarize outputs
        if: always()
        run: |
          echo "── automation_out CSVs ──"
          shopt -s nullglob
          for f in automation_out/*.csv; do
            echo "::group::$f"
            echo "Rows: $(wc -l < "$f")"
            head -n 5 "$f" || true
            echo "::endgroup::"
          done
          echo "── debug_runs CSVs ──"
          find debug_runs -type f -name "*.csv" -print0 2>/dev/null \
            | xargs -0 -I{} sh -c 'echo "::group::{}"; wc -l "{}"; head -n 3 "{}"; echo "::endgroup::"' || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: job-results-${{ github.run_id }}
          path: |
            automation_out/*.csv
            debug_runs/**/*.csv
          if-no-files-found: warn
